public class ScoreData {
    /**
     * Frequency and Recency
     * Frequency:
     * 10 ints in the array hold the count of the (i+1)th number's frequency in the game (i denotes index)
     * Recency:
     * Recency has a minimum value of 0
     * Whenever an (i+1) number is obtained as an input, the ith input is incremented by its streak amount
     * Otherwise it is degenerated by 1, applying the minimum value condition
     * Relative probability is calculated as each i's (frequency * recency)
     * */
    private int[] frequency = {0,0,0,0,0,0,0,0,0,0};
    private int[] recency = {1,1,1,1,1,1,1,1,1,1};
    private int[] likelihood = {1,1,1,1,1,1,1,1,1,1};
    private int currentStreak = 1;
    private int lastInput = 0;
    private int multiplier = 1;

    public void increaseFrequency(int number) {
        frequency[number-1]++;
    }

    public int[] getFrequency() {
        return frequency;
    }

    public void updateRecency(int number) {
        for(int i = 0; i < 10; i++) {
            if(i+1 == number) {
                recency[i] += currentStreak*multiplier;
            } else {
                recency[i]--;
                if(recency[i] < 1) {
                    recency[i] = 1;
                }
            }
        }
    }

    public int[] getRecency() {
        return recency;
    }

    public void updateLikelihood() {

    }

    public void updateStats(int number) {
        increaseFrequency(number);
        if(number == lastInput) {
            currentStreak++;
            if((currentStreak == 2) || (currentStreak == 4)) {
                multiplier = 2;
            } else {
                multiplier = 1;
            }
        } else {
            lastInput = number;
            currentStreak = 1;
            multiplier = 1;
        }
        updateRecency(number);
    }
}
